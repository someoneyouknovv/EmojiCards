<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddNewNotePageTitle" xml:space="preserve">
    <value>New note </value>
  </data>
  <data name="ChangeLanguagePageBtnSave" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="ChangeLanguagePageTitle" xml:space="preserve">
    <value>Change language</value>
  </data>
  <data name="FlashCardsGameButtonHelp" xml:space="preserve">
    <value>Click for help</value>
  </data>
  <data name="FlashCardsGamePageLabelHelper" xml:space="preserve">
    <value>Click on the question mark :)</value>
  </data>
  <data name="FlashCardsGamePageTitle" xml:space="preserve">
    <value>Flash cards</value>
  </data>
  <data name="GamesMenuPageButtonFlashCards" xml:space="preserve">
    <value>Flash cards</value>
  </data>
  <data name="GamesMenuPageButtonGuessMe" xml:space="preserve">
    <value>Guess me</value>
  </data>
  <data name="GamesMenuPageButtonSoundCards" xml:space="preserve">
    <value>Sound cards</value>
  </data>
  <data name="GamesMenuPageLabelGames" xml:space="preserve">
    <value>GAMES</value>
  </data>
  <data name="GamesMenuPageTitle" xml:space="preserve">
    <value>Games menu</value>
  </data>
  <data name="GuessMePageTitle" xml:space="preserve">
    <value>Guess me!</value>
  </data>
  <data name="InfoPageLabelInfo" xml:space="preserve">
    <value>EmojiCards is a creative and educational application that helps children with autism better understand and recognise feelings. The games that it contains are made as simple as posible so that the child could play alone. It also contains a parent- mode that helps them to write and monitor their child's progress while using the application.</value>
  </data>
  <data name="InfoPageTitle" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="LoginPageAlertForgotPassword" xml:space="preserve">
    <value>Forgot password?</value>
  </data>
  <data name="LogInPageAlertInvalidCredentials" xml:space="preserve">
    <value>Invalid email or password!</value>
  </data>
  <data name="LogInPageAlertVerifyEmail" xml:space="preserve">
    <value>In order to continue, please check your email for verification.</value>
  </data>
  <data name="LogInPageAlertWrongPassword" xml:space="preserve">
    <value>Wrong password.</value>
  </data>
  <data name="LogInPageBtnLogIn" xml:space="preserve">
    <value>Log in</value>
  </data>
  <data name="LogInPageLabelLogIn" xml:space="preserve">
    <value>Please log in with valid email address and password.</value>
  </data>
  <data name="LogInPageLabelPleaseRegister" xml:space="preserve">
    <value>Click here to sign up.</value>
  </data>
  <data name="LogInPageTitle" xml:space="preserve">
    <value>Log in</value>
  </data>
  <data name="MenuPageBtnGames" xml:space="preserve">
    <value>Games</value>
  </data>
  <data name="MenuPageBtnInfo" xml:space="preserve">
    <value>Info</value>
  </data>
  <data name="MenuPageBtnNotes" xml:space="preserve">
    <value>Notes</value>
  </data>
  <data name="MenuPageLabelMenu" xml:space="preserve">
    <value>MENU</value>
  </data>
  <data name="MenuPageTitle" xml:space="preserve">
    <value>Menu</value>
  </data>
  <data name="NoteDetailsPageAlertConfirmationDeleteNote" xml:space="preserve">
    <value>Are you sure you want to delete this note?</value>
  </data>
  <data name="NoteDetailsPageBtnDeleteNote" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="NoteDetailsPageBtnUpdateNote" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="NoteDetailsPageTitle" xml:space="preserve">
    <value>Edit note</value>
  </data>
  <data name="NotesPageAlertSureToLogOut" xml:space="preserve">
    <value>Are you sure you want to log out?</value>
  </data>
  <data name="NotesPageAlertTokenExpired" xml:space="preserve">
    <value>Due to safety reasons please log in again.</value>
  </data>
  <data name="NotesPageButtonLogOut" xml:space="preserve">
    <value>Log out</value>
  </data>
  <data name="NotesPageLabelListOfNotes" xml:space="preserve">
    <value>List of notes</value>
  </data>
  <data name="NotesPageTitle" xml:space="preserve">
    <value>Notes</value>
  </data>
  <data name="ResetPasswordPageAlertCheckEmail" xml:space="preserve">
    <value>Check your email to change your password.</value>
  </data>
  <data name="ResetPasswordPageBtnSend" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="ResetPasswordPageLabelEnterEmail" xml:space="preserve">
    <value>Enter your email adress in order to change your password.</value>
  </data>
  <data name="ResetPasswordPageTitle" xml:space="preserve">
    <value>Change password</value>
  </data>
  <data name="SharedAlertAlert" xml:space="preserve">
    <value>Alert!</value>
  </data>
  <data name="SharedAlertCantGoBack" xml:space="preserve">
    <value>You can't go back.</value>
  </data>
  <data name="SharedAlertFIllBlanks" xml:space="preserve">
    <value>Please fill all the blanks!</value>
  </data>
  <data name="SharedAlertNo" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="SharedAlertOk" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="SharedAlertPlayAgain" xml:space="preserve">
    <value>Do you want to play again?</value>
  </data>
  <data name="SharedAlertRegistrationSucceeded" xml:space="preserve">
    <value>Registration succeeded! Please check your email address for verification.</value>
  </data>
  <data name="SharedAlertSomethingWentWrong" xml:space="preserve">
    <value>Something went wrong. Please try again.</value>
  </data>
  <data name="SharedAlertUnknownEmail" xml:space="preserve">
    <value>Uknown email address!</value>
  </data>
  <data name="SharedAlertYes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="SharedButtonAddNote" xml:space="preserve">
    <value>Add note</value>
  </data>
  <data name="SharedModelAngry" xml:space="preserve">
    <value>ANGRY</value>
  </data>
  <data name="SharedModelConfused" xml:space="preserve">
    <value>CONFUSED</value>
  </data>
  <data name="SharedModelCry" xml:space="preserve">
    <value>CRY</value>
  </data>
  <data name="SharedModelHappy" xml:space="preserve">
    <value>HAPPY</value>
  </data>
  <data name="SharedModelHungry" xml:space="preserve">
    <value>HUNGRY</value>
  </data>
  <data name="SharedModelSad" xml:space="preserve">
    <value>SAD</value>
  </data>
  <data name="SharedModelShy" xml:space="preserve">
    <value>SHY</value>
  </data>
  <data name="SharedModelSmiling" xml:space="preserve">
    <value>SMILING</value>
  </data>
  <data name="SharedModelSurprised" xml:space="preserve">
    <value>SURPRISED</value>
  </data>
  <data name="SharedModelThirsty" xml:space="preserve">
    <value>THIRSTY</value>
  </data>
  <data name="SharedPlaceholderDescription" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="SharedPlaceholderEmail" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="SharedPlaceholderPassword" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="SharedPlaceholderTitle" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="SignUpPageAlertEmailExists" xml:space="preserve">
    <value>Email already exists. Please sign up with a new one.</value>
  </data>
  <data name="SignUpPageAlertInvalidCredentials" xml:space="preserve">
    <value>Please enter valid email adress.</value>
  </data>
  <data name="SignUpPageAlertWeakPassword" xml:space="preserve">
    <value>Please enter stonger password.</value>
  </data>
  <data name="SignUpPageBtnSignUp" xml:space="preserve">
    <value>Sign up</value>
  </data>
  <data name="SignUpPageLabelFillForm" xml:space="preserve">
    <value>Please fill the following form to register.</value>
  </data>
  <data name="SignUpPageTitle" xml:space="preserve">
    <value>Sign up</value>
  </data>
  <data name="SoundCardsGamePageTitle" xml:space="preserve">
    <value>Sound cards</value>
  </data>
  <data name="WelcomePageBtnChangeLang" xml:space="preserve">
    <value>Change Language</value>
  </data>
  <data name="WelcomePageBtnContinue" xml:space="preserve">
    <value>Continue</value>
  </data>
  <data name="WelcomePageTitle" xml:space="preserve">
    <value>Welcome!</value>
  </data>
</root>